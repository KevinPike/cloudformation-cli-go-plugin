package resource

import (
	"context"

	"github.com/aws-cloudformation/aws-cloudformation-rpdk-go-plugin-thulsimo/cfn"
	"github.com/aws-cloudformation/aws-cloudformation-rpdk-go-plugin-thulsimo/cfn/handler"
)

//New is a factory function that returns a ResourceHandler
func New() *ResourceHandler {
	return &ResourceHandler{}
}

//ResourceHandler implements the cfn.Handler interface
type ResourceHandler struct {
}

//Create handles the Create event from the Cloudformation service.
func (r *ResourceHandler) Create(ctx context.Context, request handler.Request) (handler.ProgressEvent, error) {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.ResourceProperties(m); err != nil {
		return handler.NewFailedResponse(err), err
	}
	//return the status
	return handler.NewResponse(), nil
}

//Delete handles the Delete event from the Cloudformation service.
func (r *ResourceHandler) Delete(ctx context.Context, request handler.Request) (handler.ProgressEvent, error) {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.ResourceProperties(m); err != nil {
		return handler.NewFailedResponse(err), err
	}
	//return the status
	return handler.NewResponse(), nil
}

//List handles the List event from the Cloudformation service.
func (r *ResourceHandler) List(ctx context.Context, request handler.Request) (handler.ProgressEvent, error) {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.ResourceProperties(m); err != nil {
		return handler.NewFailedResponse(err), err
	}
	//return the status
	return handler.NewResponse(), nil
}

//Read handles the Read event from the Cloudformation service.
func (r *ResourceHandler) Read(ctx context.Context, request handler.Request) (handler.ProgressEvent, error) {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.ResourceProperties(m); err != nil {
		return handler.NewFailedResponse(err), err
	}
	//return the status
	return handler.NewResponse(), nil
}

//Update handles the Update event from the Cloudformation service.
func (r *ResourceHandler) Update(ctx context.Context, request handler.Request) (handler.ProgressEvent, error) {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.ResourceProperties(m); err != nil {
		return handler.NewFailedResponse(err), err
	}
	//return the status
	return handler.NewResponse(), nil
}


